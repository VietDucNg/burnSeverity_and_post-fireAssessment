aoi.crs
crs(aoi)
aoi@crs
View(aoi)
aoi = st_transform(aoi, CRS(proj4string(nbr_post))
)
st_crs(aoi)
nbr_pre <- mask(nbr_post, aoi)
nbr_post <- mask(nbr_post, aoi)
nbr_post <- crop(nbr_post,aoi)
plot(nbr_post, main = 'NBR_postfire')
nbr_pre = raster('output/04_nbr/nbr_pre.tif')
nbr_post = raster('output/04_nbr/nbr_post.tif')
aoi = sf::read_sf("data/vector/AOI_ThuanChau.shp")
aoi = st_transform(aoi, CRS(proj4string(nbr_post))
)
plot(nbr_post, main = 'NBR_postfire')
nbr_post <- mask(nbr_post, aoi)
nbr_post <- crop(nbr_post,aoi)
plot(nbr_post, main = 'NBR_postfire')
writeRaster(nbr_post, "output/04_nbr/nbr_post.tif")
nbr_pre = raster('output/04_nbr/nbr_pre.tif')
nbr_post = raster('output/04_nbr/nbr_post.tif')
# print results
nbr_pre
nbr_post
# plot
par(mfrow = c(1,2))
plot(nbr_pre, main = 'NBR_prefire')
plot(nbr_post, main = 'NBR_postfire')
aoi = sf::read_sf("data/vector/AOI_ThuanChau.shp")
aoi = st_transform(aoi, CRS(proj4string(nbr_post)))
#### dNBR calculation
nbr_post <- (clip_b8_post1 - clip_b12_post1)/(clip_b8_post1 + clip_b12_post1)
#### dNBR calculation
dnbr <- nbr_pre - nbr_post
dnbr
plot(dnbr, main='dNBR')
#### RBR calculation
rbr = dnbr/(nbr_pre + 1.001)
rbr
par(mfrow = c(1,2))
plot(nbr_pre, main = 'Normalized Burn Ratio_prefire')
plot(nbr_post, main = 'Normalized Burn Ratio_postfire')
title('test', outer = TRUE)
par(mfrow = c(1,2))
plot(nbr_pre, main = 'Normalized Burn Ratio_prefire')
plot(nbr_post, main = 'Normalized Burn Ratio_postfire')
title('test',line =1, outer = TRUE)
par(mfrow = c(1,2))
plot(nbr_pre, main = 'Normalized Burn Ratio_prefire')
plot(nbr_post, main = 'Normalized Burn Ratio_postfire')
title('test',line = 5, outer = TRUE)
par(mfrow = c(1,2))
plot(nbr_pre, main = 'Normalized Burn Ratio_prefire')
plot(nbr_post, main = 'Normalized Burn Ratio_postfire')
title('test',line = -21, outer = TRUE)
title('test',line = -1, outer = TRUE)
par(mfrow = c(1,2))
plot(nbr_pre, main = 'Normalized Burn Ratio_prefire')
plot(nbr_post, main = 'Normalized Burn Ratio_postfire')
title('test',line = -1, outer = TRUE)
par(mfrow = c(1,2))
plot(nbr_pre, main = 'prefire')
plot(nbr_post, main = 'postfire')
title('Normalized Burn Ratio',line = -1, outer = TRUE)
plot(rbr, main='Relativized Burn Ratio (RBR)')
rdnbr
#### RdNBR calculation
rdnbr = dnbr/sqrt(abs(nbr_pre))
rdnbr
plot(rdnbr, main = 'The Relativized differenced Normalized Burn ratio (RdNBR)')
### dNBR ###
# set ranges for the Burn Severity classes
dNBR_ranges <- c(-Inf,-.5,0, # out of range - no data
-.5,-.25,1, #enhanced regrowth, high
-.25,-.1,2,     # enhanced regrowth, low
-.1,0.1, 3,    # unburned area
0.1, 0.27, 4,  # low severity
0.27, 0.44, 5, # moderate-low severity
0.44, 0.66, 6, # moderate-high severity
0.66, 1.4, 7,  # high severity
1.4, +Inf, 0)  # out of range - no data
# set classification matrix
class.matrix <- matrix(dNBR_ranges, ncol = 3, byrow = T)
# use matrix to reclassify dNBR_scaled
dNBR_reclass <- reclassify(dnbr, class.matrix, right=NA)
# view frequencies of reclassification values
freq(dNBR_reclass)
# build the attribute table for the legend
dNBR_reclass <- ratify(dNBR_reclass)
rat <- levels(dNBR_reclass)[[1]]
# create the text that will be on the legend
rat$legend  <- c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity")
levels(dNBR_reclass) <- rat
# colour setting for the severity map
#my_col=c("#FFFFFF","#556b2f","#6e8b3d","#32CD32", "#EEEE00","#ee9a00", "#FF0000", "#800080")
my_col=c("white", "darkolivegreen","darkolivegreen4","limegreen", "yellow2", "orange2", "red", "purple")
# plots the burn severity map with title
plot(dNBR_reclass,
legend=F,box=F,axes=F,
col=my_col,
cex.main=0.9,
main="Sentinel-2 derived Burn Severity")
# plot the legend on the right side of the burn severity map
legend(x='topright', legend =rat$legend,
fill = my_col, y='topright',bty='n',
inset=c(-0.15,0), xpd=T)
## Estimate fire affected area size
#get frequencies of the burn sverity classes
freq(dNBR_reclass)
## Estimate fire affected area size
#get frequencies of the burn sverity classes
label  <- cbind(c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity"))
## convert frequencies matrix to data frame
df <- NA
df <- cbind.data.frame(label,(freq(dNBR_reclass)[1:8,]))
## adjust the column name
colnames(df)[3] <- "pixelcount"
## calculate and add the percentage from the pixelcounts
df$pixelperc <- round((100*df$pixelcount)/sum(df$pixelcount),1)
## calculate the hectares from the pixelcounts
## sentinel pixel size is 20m X 20m --> the area is 400sqm = 0.04 hectares
df$area_ha <- round(((df$pixelcount*(xres(dNBR_reclass)^2))/10000),0)
df
# Create a barplot from df
ggplot(data = df, aes(x=label, y=area_ha))+
geom_bar(stat = "identity", width = 0.5, color = "black", fill=my_col)+
geom_text(aes(label=paste0(c(area_ha),'ha','\n[',c(pixelperc),'%]')),
vjust=-0.3, size=3.5)+
scale_x_discrete(limits=c("No Data", "High enhanced regrowth",
"Low enhanced regrowth","Unburned",
"Low Severity", "Moderate-low Severity",
"Moderate-high Severity", "High Severity"))+
labs(title="dNBR", x="Burn Severity class", y="Area (ha)")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
# Create a barplot from df
library(ggplot2)
ggplot(data = df, aes(x=label, y=area_ha))+
geom_bar(stat = "identity", width = 0.5, color = "black", fill=my_col)+
geom_text(aes(label=paste0(c(area_ha),'ha','\n[',c(pixelperc),'%]')),
vjust=-0.3, size=3.5)+
scale_x_discrete(limits=c("No Data", "High enhanced regrowth",
"Low enhanced regrowth","Unburned",
"Low Severity", "Moderate-low Severity",
"Moderate-high Severity", "High Severity"))+
labs(title="dNBR", x="Burn Severity class", y="Area (ha)")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = burnSeverity ,aes(x=`Burn severity class`,
y= `Area (ha)`))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=`Area (ha)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
burnSeverity <- read_excel("output/07_burnSeverity/burnSeverity.xlsx",
+     sheet = "R_Overall")
ggplot(data = burnSeverity ,aes(x=`Burn severity class`,
y= `Area (ha)`))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=`Area (ha)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
burnSeverity <- read_excel("output/07_burnSeverity/burnSeverity.xlsx",
sheet = "R_Overall")
library(readxl)
burnSeverity <- read_excel("output/07_burnSeverity/burnSeverity.xlsx",
sheet = "R_Overall")
ggplot(data = burnSeverity ,aes(x=`Burn severity class`,
y= `Area (ha)`))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=`Area (ha)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
View(burnSeverity)
burnSeverity
ggplot(data = burnSeverity ,aes(x=`Burn severity class`,
y= `Area (ha)`))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=`Area (ha)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
ggplot(data = burnSeverity ,aes(x=Burn severity class, y= `Area (ha)`))+
ggplot(data = burnSeverity ,aes(x=`Burn severity class`, y= `Area (ha)`))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=`Area (ha)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
ggplot(data = burnSeverity ,aes(x=`Burn severity class`, y= burnSeverity$`Area (ha)`))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=`Area (ha)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
names(burnSeverity)
names(burnSeverity)[1]
names(burnSeverity)[1] = 'burn_class'
names(burnSeverity)[2] = 'area'
ggplot(data = burnSeverity ,aes(x=burn_class, y= area))+
geom_bar(stat = "identity", aes(fill= Indices), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=area,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
ggplot(data = burnSeverity ,aes(x=burn_class, y= area))+
geom_bar(stat = "identity", width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("No Data"="#FFFFFF",
"High enhanced regrowth"="#556b2f",
"Low enhanced regrowth"="#6e8b3d",
"Unburned"="#32CD32",
"Low Severity"="#EEEE00",
"Moderate-low Severity"="#ee9a00",
"Moderate-high Severity"="#FF0000",
"High Severity"="#800080"))+
geom_text(label=area,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Distribution of the classified class area")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))+
theme(legend.title = element_text(face = "bold"))
### RBR ###
# set ranges for the Burn Severity classes
rbr_ranges <- c(-Inf,-.5,0, # out of range - no data
-.5,-.25,1, #enhanced regrowth, high
-.25,-.1,2,     # enhanced regrowth, low
-.1,0.1, 3,    # unburned area
0.1, 0.27, 4,  # low severity
0.27, 0.44, 5, # moderate-low severity
0.44, 0.66, 6, # moderate-high severity
0.66, 1.4, 7,  # high severity
1.4, +Inf, 0)  # out of range - no data
# set classification matrix
class.matrix <- matrix(rbr_ranges, ncol = 3, byrow = T)
# use matrix to reclassify RBR_scaled
rbr_reclass <- reclassify(rbr, class.matrix, right=NA)
# view frequencies of reclassification values
freq(rbr_reclass)
# build the attribute table for the legend
rbr_reclass <- ratify(rbr_reclass)
rat <- levels(rbr_reclass)[[1]]
class.matrix
# build the attribute table for the legend
rbr_reclass <- ratify(rbr_reclass)
rat <- levels(rbr_reclass)[[1]]
# create the text that will be on the legend
rat$legend  <- c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity")
levels(rbr_reclass) <- rat
# colour setting for the severity map
#my_col=c("#FFFFFF","#556b2f","#6e8b3d","#32CD32", "#EEEE00","#ee9a00", "#FF0000", "#800080")
my_col=c("white", "darkolivegreen","darkolivegreen4","limegreen", "yellow2", "orange2", "red", "purple")
# plots the burn severity map with title
plot(rbr_reclass,
legend=F,box=F,axes=F,
col=my_col,
cex.main=0.9,
main="Sentinel-2 derived Burn Severity based on RBR")
# plot the legend on the right side of the burn severity map
legend(x='topright', legend =rat$legend,
fill = my_col, y='topright',bty='n',
inset=c(-0.15,0), xpd=T)
##Estimate fire affected area size
# get frequencies of the burn sverity classes
label  <- cbind(c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity"))
df <- cbind.data.frame(label,(freq(rbr_reclass)[1:8,]))
# adjust the column name
colnames(df)[3] <- "pixelcount"
# calculate and add the percentage from the pixelcounts
df$pixelperc <- round((100*df$pixelcount)/sum(df$pixelcount),1)
# calculate the hectares from the pixelcounts
# sentinel pixel size is 20m X 20m --> the area is 400sqm = 0.04 hectares
df$area_ha <- round(((df$pixelcount*(xres(rbr_reclass)^2))/10000),0)
df
# Create a barplot for dNBR-based burn map class
ggplot(data = df, aes(x=label, y=area_ha))+
geom_bar(stat = "identity", width = 0.5, color = "black", fill=my_col)+
geom_text(aes(label=paste0(c(area_ha),'ha','\n[',c(pixelperc),'%]')),
vjust=-0.3, size=3.5)+
scale_x_discrete(limits=c("No Data", "High enhanced regrowth",
"Low enhanced regrowth","Unburned",
"Low Severity", "Moderate-low Severity",
"Moderate-high Severity", "High Severity"))+
labs(title="RBR", x="Burn Severity class", y="Area (ha)")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
### RdNBR ###
# set ranges for the Burn Severity classes
rdnbr_ranges <- c(-Inf,-.5,0, # out of range - no data
-.5,-.25,1, #enhanced regrowth, high
-.25,-.1,2,     # enhanced regrowth, low
-.1,0.1, 3,    # unburned area
0.1, 0.27, 4,  # low severity
0.27, 0.44, 5, # moderate-low severity
0.44, 0.66, 6, # moderate-high severity
0.66, 1.4, 7,  # high severity
1.4, +Inf, 0)  # out of range - no data
# set classification matrix
class.matrix <- matrix(rdnbr_ranges, ncol = 3, byrow = T)
# use matrix to reclassify RBR_scaled
rdnbr_reclass <- reclassify(rdnbr, class.matrix, right=NA)
# build the attribute table for the legend
rdnbr_reclass <- ratify(rdnbr_reclass)
# build the attribute table for the legend
rdnbr_reclass <- ratify(rdnbr_reclass)
rat <- levels(rdnbr_reclass)[[1]]
# create the text that will be on the legend
rat$legend  <- c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity")
levels(rdnbr_reclass) <- rat
# colour setting for the severity map
#my_col=c("#FFFFFF","#556b2f","#6e8b3d","#32CD32", "#EEEE00","#ee9a00", "#FF0000", "#800080")
my_col=c("white", "darkolivegreen","darkolivegreen4","limegreen", "yellow2", "orange2", "red", "purple")
# plots the burn severity map with title
plot(rdnbr_reclass,
legend=F,box=F,axes=F,
col=my_col,
cex.main=0.9,
main="Sentinel-2 derived Burn Severity based on RdNBR")
# plot the legend on the right side of the burn severity map
legend(x='topright', legend =rat$legend,
fill = my_col, y='topright',bty='n',
inset=c(-0.15,0), xpd=T)
## Estimate fire affected area size based on RdNBR
# get frequencies of the burn sverity classes
label  <- cbind(c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity"))
## Estimate fire affected area size based on RdNBR
# get frequencies of the burn severity classes
label  <- cbind(c("No Data",
"High enhanced regrowth",
"Low enhanced regrowth",
"Unburned",
"Low Severity",
"Moderate-low Severity",
"Moderate-high Severity",
"High Severity"))
## convert frequencies matrix to data frame
df <- cbind.data.frame(label,(freq(rdnbr_reclass)[1:8,]))
## convert frequencies matrix to data frame
df <- cbind.data.frame(label,(freq(rdnbr_reclass)[1:8,]))
## adjust the column name
colnames(df)[3] <- "pixelcount"
## calculate and add the percentage from the pixelcounts
df$pixelperc <- round((100*df$pixelcount)/sum(df$pixelcount),1)
## calculate the hectares from the pixelcounts
## sentinel pixel size is 20m X 20m --> the area is 400sqm = 0.04 hectares
df$area_ha <- round(((df$pixelcount*(xres(rdnbr_reclass)^2))/10000),0)
),
# calculate and add the percentage from the pixelcounts
df$pixelperc <- round((100*df$pixelcount)/sum(df$pixelcount),1)
# calculate the hectares from the pixelcounts
# sentinel pixel size is 20m X 20m --> the area is 400sqm = 0.04 hectares
df$area_ha <- round(((df$pixelcount*(xres(rdnbr_reclass)^2))/10000),0)
df
# Create a barplot for RdNBR-based burn map class
ggplot(data = df, aes(x=label, y=area_ha))+
geom_bar(stat = "identity", width = 0.5, color = "black", fill=my_col)+
geom_text(aes(label=paste0(c(area_ha),'ha','\n[',c(pixelperc),'%]')),
vjust=-0.3, size=3.5)+
scale_x_discrete(limits=c("No Data", "High enhanced regrowth",
"Low enhanced regrowth","Unburned",
"Low Severity", "Moderate-low Severity",
"Moderate-high Severity", "High Severity"))+
labs(title="RdNBR", x="Burn Severity class", y="Area (ha)")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
#### statistic for MODIS and VIIRS burn points ####
library(readxl)
burnPoint <- read_excel("burnPoint.xlsx",sheet = "R_burnPoint")
burnPoint <- read_excel("output/08_burnMap/burnPoint.xlsx",sheet = "R_burnPoint")
ggplot(data = burnPoint ,aes(x=`Burnt Severity Indices`,
y= burnPoint$`Percentage of Active Fire Points (%)`))+
geom_bar(stat = "identity", aes(fill= Type), width = 0.7,
position = "dodge")+
scale_fill_manual("Legend", values = c("Unburnt"="#32CD32","Burnt"="#FF0000"))+
geom_text(label=burnPoint$`Percentage of Active Fire Points (%)`,color="black",size=4,
vjust=-0.2,hjust = 0.5,
position = position_dodge(width= 0.9))+
labs(title="Burnt area percentage versus Active Fire Points")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5,face = "bold"))
